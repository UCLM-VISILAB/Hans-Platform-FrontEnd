{"ast":null,"code":"var _jsxFileName = \"C:\\\\VISILAB\\\\Hans-Platform-FrontEnd\\\\src\\\\components\\\\admin\\\\AdminInterface.jsx\",\n  _s = $RefreshSig$();\nimport { React, useEffect, useState, useCallback } from \"react\";\nimport './AdminInterface.css';\nimport { Session, SessionStatus } from '../../context/Session';\nimport CountDown from '../session/Countdown';\nimport BoardView from '../BoardView';\nimport QuestionDetails from '../session/QuestionDetails';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminInterface(_ref) {\n  _s();\n  let {\n    username,\n    password,\n    collections,\n    sessions,\n    onSessionCreated\n  } = _ref;\n  const [selectedSession, setSelectedSession] = useState({\n    id: 0,\n    duration: 0,\n    collection_id: \"\",\n    question_id: \"\",\n    status: \"\"\n  });\n  const [participantList, setParticipantList] = useState(null);\n  const [currentSession, setCurrentSession] = useState(null);\n  const [sessionStatus, setSessionStatus] = useState(SessionStatus.Waiting);\n  const [logs, setLogs] = useState([]);\n  const [selectedLog, setSelectedLog] = useState('');\n  const [waitingCountDown, setWaitingCountDown] = useState(false);\n  const [activeQuestion, setActiveQuestion] = useState({});\n  const [activeCollection, setActiveCollection] = useState({});\n  const [userMagnetPosition] = useState({\n    x: 0,\n    y: 0,\n    norm: []\n  });\n  const [peerMagnetPositions, setPeerMagnetPositions] = useState({});\n  const [centralCuePosition, setCentralCuePosition] = useState([]);\n  const [targetDateCountdown, setTargetDateCountdown] = useState('2023-04-01T00:00:00Z');\n  const [shouldPublishCentralPosition, setShouldPublishCentralPosition] = useState(false);\n  let timerId;\n  useEffect(() => {\n    if (sessions && sessions.length > 0) {\n      setSelectedSession(sessions[0]);\n    }\n  }, [sessions]);\n  function customSortCollections(a, b) {\n    const getIdNumber = str => parseInt(str.split('_')[1]);\n    const aIdNumber1 = getIdNumber(a.id);\n    const bIdNumber1 = getIdNumber(b.id);\n    if (aIdNumber1 !== bIdNumber1) {\n      return aIdNumber1 - bIdNumber1;\n    }\n    const aIdNumber2 = parseInt(a.id.split('_')[0]);\n    const bIdNumber2 = parseInt(b.id.split('_')[0]);\n    return aIdNumber2 - bIdNumber2;\n  }\n  function customSortQuestions(a, b) {\n    const getIdNumber = str => {\n      const match = str.match(/_(\\d+):/);\n      return match ? parseInt(match[1]) : 0;\n    };\n    const aPromptNumber = getIdNumber(a.prompt);\n    const bPromptNumber = getIdNumber(b.prompt);\n    return aPromptNumber - bPromptNumber;\n  }\n  const compareDates = (a, b) => {\n    // Divide las cadenas en sus componentes\n    const componentsA = a.split('-').map(Number);\n    const componentsB = b.split('-').map(Number);\n    // Crea objetos de fecha personalizados\n    const dateA = new Date(componentsA[0], componentsA[1] - 1, componentsA[2], componentsA[3], componentsA[4], componentsA[5]);\n    const dateB = new Date(componentsB[0], componentsB[1] - 1, componentsB[2], componentsB[3], componentsB[4], componentsB[5]);\n    return dateA - dateB;\n  };\n  useEffect(() => {\n    if (collections && collections.length > 0 && selectedSession) {\n      setActiveCollection(collections[0]);\n      collections.sort(customSortCollections);\n      collections.forEach(collection => {\n        collection.questions.sort(customSortQuestions);\n      });\n      setSelectedSession(prevSelectedSession => ({\n        ...prevSelectedSession,\n        collection_id: collections[0].id,\n        question_id: collections[0].questions[0].id\n      }));\n      setActiveQuestion({\n        id: collections[0].questions[0].id,\n        prompt: collections[0].questions[0].prompt,\n        answers: collections[0].questions[0].answers,\n        image: `/api/question/${collections[0].id}/${collections[0].questions[0].id}/image`\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [collections]);\n  const getParticipantsBySession = useCallback(() => {\n    fetch(`/api/session/${selectedSession.id}/allParticipants`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: username,\n        pass: password\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        res.json().then(data => {\n          setParticipantList(data);\n        });\n      } else {\n        res.text().then(msg => console.log(msg));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [selectedSession.id, username, password]);\n  useEffect(() => {\n    if (selectedSession.id !== 0) {\n      getParticipantsBySession();\n      setCurrentSession(new Session(selectedSession.id, 0, controlMessage => {\n        if (controlMessage.participant !== 0) {\n          if (selectedSession.id === Number(controlMessage.session)) {\n            switch (controlMessage.type) {\n              case 'join':\n                if (sessionStatus === SessionStatus.Active) {\n                  setTimeout(function () {\n                    //Mirar collection_id:activeCollection.id en el mensaje\n                    currentSession.publishControl({\n                      type: 'setup',\n                      collection_id: activeCollection.id,\n                      question_id: selectedSession.question_id\n                    });\n                  }, 1000);\n                }\n                getParticipantsBySession();\n                break;\n              case 'ready':\n                if (sessionStatus === SessionStatus.Active) {\n                  setTimeout(function () {\n                    let targetDate = new Date(targetDateCountdown);\n                    currentSession.publishControl({\n                      type: 'started',\n                      duration: (targetDate - new Date()) / 1000,\n                      positions: peerMagnetPositions\n                    });\n                  }, 1000);\n                }\n                getParticipantsBySession();\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }, (participantId, updateMessage) => {\n        if (participantId !== 0) {\n          setPeerMagnetPositions(peerPositions => {\n            return {\n              ...peerPositions,\n              [participantId]: updateMessage.data.position\n            };\n          });\n        }\n      }));\n    }\n    // eslint-disable-next-line\n  }, [selectedSession.id, getParticipantsBySession]);\n  useEffect(() => {\n    // Update central Cue based on magnet positions\n    if (peerMagnetPositions && Object.keys(peerMagnetPositions).length > 1) {\n      const usablePeerPositions = Object.keys(peerMagnetPositions).map(k => peerMagnetPositions[k]).filter(peerPosition => peerPosition.length === activeQuestion.answers.length);\n      setCentralCuePosition(usablePeerPositions.reduce((cuePosition, peerPosition) => cuePosition.map((value, i) => value + peerPosition[i])).map(value => value / usablePeerPositions.length));\n    }\n    // eslint-disable-next-line\n  }, [peerMagnetPositions]);\n  useEffect(() => {\n    if (shouldPublishCentralPosition && currentSession) {\n      currentSession.publishUpdate({\n        data: {\n          position: centralCuePosition,\n          timeStamp: new Date().toISOString()\n        }\n      });\n      setShouldPublishCentralPosition(false);\n      setTimeout(() => {\n        currentSession.publishControl({\n          type: 'stop'\n        });\n      }, 100);\n    }\n    // eslint-disable-next-line\n  }, [shouldPublishCentralPosition, currentSession]);\n  const handleSessionChange = event => {\n    const sessionId = parseInt(event.target.value);\n    const session = sessions.find(s => s.id === sessionId);\n    session.question_id = selectedSession.question_id;\n    session.duration = selectedSession.duration;\n    setSelectedSession(session);\n  };\n  const handleQuestionChange = event => {\n    setPeerMagnetPositions({});\n    setSelectedSession({\n      ...selectedSession,\n      question_id: event.target.value\n    });\n    let question = activeCollection.questions.find(item => item.id === parseInt(event.target.value));\n    setActiveQuestion({\n      id: event.target.value,\n      prompt: question.prompt,\n      answers: question.answers,\n      image: `/api/question/${activeCollection.id}/${event.target.value}/image`\n    });\n    currentSession.publishControl({\n      type: 'setup',\n      collection_id: activeCollection.id,\n      question_id: event.target.value\n    });\n  };\n  const handleCollectionChange = event => {\n    setPeerMagnetPositions({});\n    setSelectedSession({\n      ...selectedSession,\n      collection_id: event.target.value\n    });\n    let collection = collections.find(item => item.id === event.target.value);\n    let question = null;\n    for (let i = 1;; i++) {\n      const foundQuestion = collection.questions.find(item => {\n        const extractedNumber = parseInt(item.prompt.split(\"_\")[1].substring(0, item.prompt.split(\"_\")[1].indexOf(\":\")));\n        return extractedNumber === i;\n      });\n      if (foundQuestion) {\n        question = foundQuestion;\n        break; // Salir del bucle si encontramos la pregunta.\n      }\n    }\n\n    setActiveCollection(collection);\n    setActiveQuestion({\n      id: question.id,\n      prompt: question.prompt,\n      answers: question.answers,\n      image: `/api/question/${collection.id}/${question.id}/image`\n    });\n    currentSession.publishControl({\n      type: 'setup',\n      collection_id: collection.id,\n      question_id: question.id\n    });\n  };\n  const startSession = event => {\n    if (!waitingCountDown) {\n      setPeerMagnetPositions({});\n      setCentralCuePosition([0, 0, 0, 0, 0, 0]);\n      currentSession.publishControl({\n        type: 'start',\n        duration: selectedSession.duration\n      });\n      setSessionStatus(SessionStatus.Active);\n      setTargetDateCountdown(Date.now() + selectedSession.duration * 1000 + 200);\n    }\n    waitOrCloseSession();\n  };\n  const waitOrCloseSession = () => {\n    if (!waitingCountDown) {\n      setWaitingCountDown(true);\n      timerId = setTimeout(() => {\n        setShouldPublishCentralPosition(true); // Marcar que se debe publicar la posición central\n        setWaitingCountDown(false);\n        setTargetDateCountdown(Date.now());\n        setSessionStatus(SessionStatus.Waiting);\n      }, selectedSession.duration * 1000);\n    } else {\n      clearTimeout(timerId);\n      setShouldPublishCentralPosition(true); // Marcar que se debe publicar la posición central\n      setWaitingCountDown(false);\n      setTargetDateCountdown(Date.now());\n      setSessionStatus(SessionStatus.Waiting);\n    }\n  };\n  const createSession = event => {\n    fetch(`/api/createSession`, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        user: username,\n        pass: password\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        res.json().then(data => {\n          onSessionCreated(data);\n        });\n      } else {\n        res.text().then(msg => console.log(msg));\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const downloadLastFolder = async () => {\n    let folderPath = logs[logs.length - 1];\n    setSelectedLog(folderPath);\n    await new Promise(resolve => setTimeout(resolve, 0)); // Esperar un ciclo de eventos para que setSelectedLog termine de actualizar\n    fetch(`/api/downloadLog/${logs[logs.length - 1]}`).then(response => response.blob()).then(blob => {\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      let folder_name = folderPath + \".zip\";\n      link.setAttribute('download', folder_name);\n      document.body.appendChild(link);\n      link.click();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const downloadFolder = () => {\n    let folderPath = selectedLog;\n    fetch(`/api/downloadLog/${folderPath}`).then(response => response.blob()).then(blob => {\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      let folder_name = folderPath + \".zip\";\n      link.setAttribute('download', folder_name);\n      document.body.appendChild(link);\n      link.click();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const downloadAllLogs = () => {\n    fetch(`/api/downloadAllLogs`).then(response => response.blob()).then(blob => {\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      let folder_name = \"AllLogs.zip\";\n      link.setAttribute('download', folder_name);\n      document.body.appendChild(link);\n      link.click();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  const fetchlogs = async () => {\n    try {\n      const response = await fetch('/api/listLogs');\n      const data = await response.json();\n      setLogs(data.logs.filter(item => item !== \"zips\").sort(compareDates));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleLogSelect = event => {\n    const selectedLog = event.target.value;\n    setSelectedLog(selectedLog);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessionlist\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleSessionChange,\n          disabled: waitingCountDown,\n          children: sessions && sessions.map(session => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: session.id,\n            children: [\"Session \", session.id]\n          }, session.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: createSession,\n          children: \"New Session\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sessiondetails\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          readOnly: true,\n          value: selectedSession && selectedSession.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Duration:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: selectedSession ? selectedSession.duration : \"\",\n          onChange: e => setSelectedSession({\n            ...selectedSession,\n            duration: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Collection:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleCollectionChange,\n          disabled: waitingCountDown,\n          children: collections && collections.map(collection => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: collection.id,\n            children: collection.id\n          }, collection.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleQuestionChange,\n          disabled: waitingCountDown,\n          children: activeCollection.questions && activeCollection.questions.map(question => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: question.id,\n            children: question.prompt\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"startsession\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startSession,\n          children: waitingCountDown ? \"Stop\" : \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Ready: \", participantList ? participantList.filter(participant => participant.status === 'ready').length : 0, \"/\", participantList ? participantList.length : 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"inputParticipant\",\n          readOnly: true,\n          value: participantList ? participantList.map(p => `${p.username} -> ${p.status}`).join(\"\\n\") : \"Sin participantes todavía\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(QuestionDetails, {\n          image: activeQuestion.id ? activeQuestion.image : \"\",\n          prompt: activeQuestion.id ? activeQuestion.prompt : \"Question not defined yet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CountDown, {\n          targetDate: targetDateCountdown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loglist\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"label-log\",\n          children: [\"Lista de logs:(\", logs ? logs.length : 0, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedLog,\n          onChange: handleLogSelect,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Seleccionar log\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this), logs.map(log => {\n            if (log !== \"zips\") {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: log,\n                children: log\n              }, log, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 24\n              }, this);\n            }\n            return null;\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchlogs,\n          children: \"Obtener logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadFolder,\n          children: \"Descargar log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadLastFolder,\n          children: \"Descargar \\xFAltimo log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadAllLogs,\n          children: \"Descargar todos los logs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-column\",\n      children: /*#__PURE__*/_jsxDEV(BoardView, {\n        answers: activeQuestion.answers ? activeQuestion.answers : [],\n        centralCuePosition: centralCuePosition,\n        peerMagnetPositions: peerMagnetPositions && Object.keys(peerMagnetPositions).map(k => peerMagnetPositions[k]),\n        userMagnetPosition: userMagnetPosition,\n        onUserMagnetMove: null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminInterface, \"kwCtWNSvfL3RbhqCj73ApTWchGc=\");\n_c = AdminInterface;\nvar _c;\n$RefreshReg$(_c, \"AdminInterface\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Session","SessionStatus","CountDown","BoardView","QuestionDetails","AdminInterface","username","password","collections","sessions","onSessionCreated","selectedSession","setSelectedSession","id","duration","collection_id","question_id","status","participantList","setParticipantList","currentSession","setCurrentSession","sessionStatus","setSessionStatus","Waiting","logs","setLogs","selectedLog","setSelectedLog","waitingCountDown","setWaitingCountDown","activeQuestion","setActiveQuestion","activeCollection","setActiveCollection","userMagnetPosition","x","y","norm","peerMagnetPositions","setPeerMagnetPositions","centralCuePosition","setCentralCuePosition","targetDateCountdown","setTargetDateCountdown","shouldPublishCentralPosition","setShouldPublishCentralPosition","timerId","length","customSortCollections","a","b","getIdNumber","str","parseInt","split","aIdNumber1","bIdNumber1","aIdNumber2","bIdNumber2","customSortQuestions","match","aPromptNumber","prompt","bPromptNumber","compareDates","componentsA","map","Number","componentsB","dateA","Date","dateB","sort","forEach","collection","questions","prevSelectedSession","answers","image","getParticipantsBySession","fetch","method","headers","body","JSON","stringify","user","pass","then","res","json","data","text","msg","console","log","catch","error","controlMessage","participant","session","type","Active","setTimeout","publishControl","targetDate","positions","participantId","updateMessage","peerPositions","position","Object","keys","usablePeerPositions","k","filter","peerPosition","reduce","cuePosition","value","i","publishUpdate","timeStamp","toISOString","handleSessionChange","event","sessionId","target","find","s","handleQuestionChange","question","item","handleCollectionChange","foundQuestion","extractedNumber","substring","indexOf","startSession","now","waitOrCloseSession","clearTimeout","createSession","downloadLastFolder","folderPath","Promise","resolve","response","blob","url","window","URL","createObjectURL","link","document","createElement","href","folder_name","setAttribute","appendChild","click","downloadFolder","downloadAllLogs","fetchlogs","handleLogSelect","e","p","join"],"sources":["C:/VISILAB/Hans-Platform-FrontEnd/src/components/admin/AdminInterface.jsx"],"sourcesContent":["import { React, useEffect, useState, useCallback } from \"react\";\r\n\r\nimport './AdminInterface.css';\r\nimport { Session, SessionStatus } from '../../context/Session';\r\nimport CountDown from '../session/Countdown';\r\nimport BoardView from '../BoardView';\r\nimport QuestionDetails from '../session/QuestionDetails';\r\n\r\nexport default function AdminInterface({ username, password, collections, sessions, onSessionCreated }) {\r\n  const [selectedSession, setSelectedSession] = useState({ id: 0, duration: 0, collection_id: \"\", question_id: \"\", status: \"\" });\r\n  const [participantList, setParticipantList] = useState(null);\r\n  const [currentSession, setCurrentSession] = useState(null);\r\n  const [sessionStatus, setSessionStatus] = useState(SessionStatus.Waiting);\r\n  const [logs, setLogs] = useState([]);\r\n  const [selectedLog, setSelectedLog] = useState('');\r\n  const [waitingCountDown, setWaitingCountDown] = useState(false);\r\n  const [activeQuestion, setActiveQuestion] = useState({});\r\n  const [activeCollection, setActiveCollection] = useState({});\r\n  const [userMagnetPosition] = useState({ x: 0, y: 0, norm: [] });\r\n  const [peerMagnetPositions, setPeerMagnetPositions] = useState({});\r\n  const [centralCuePosition, setCentralCuePosition] = useState([]);\r\n  const [targetDateCountdown, setTargetDateCountdown] = useState('2023-04-01T00:00:00Z');\r\n  const [shouldPublishCentralPosition, setShouldPublishCentralPosition] = useState(false);\r\n  let timerId;\r\n\r\n  useEffect(() => {\r\n    if (sessions && sessions.length > 0) {\r\n      setSelectedSession(sessions[0]);\r\n    }\r\n  }, [sessions]);\r\n\r\n  function customSortCollections(a, b) {\r\n    const getIdNumber = (str) => parseInt(str.split('_')[1]);\r\n\r\n    const aIdNumber1 = getIdNumber(a.id);\r\n    const bIdNumber1 = getIdNumber(b.id);\r\n\r\n    if (aIdNumber1 !== bIdNumber1) {\r\n      return aIdNumber1 - bIdNumber1;\r\n    }\r\n\r\n    const aIdNumber2 = parseInt(a.id.split('_')[0]);\r\n    const bIdNumber2 = parseInt(b.id.split('_')[0]);\r\n\r\n    return aIdNumber2 - bIdNumber2;\r\n  }\r\n  function customSortQuestions(a, b) {\r\n    const getIdNumber = (str) => {\r\n      const match = str.match(/_(\\d+):/);\r\n      return match ? parseInt(match[1]) : 0;\r\n    };\r\n\r\n    const aPromptNumber = getIdNumber(a.prompt);\r\n    const bPromptNumber = getIdNumber(b.prompt);\r\n\r\n    return aPromptNumber - bPromptNumber;\r\n  }\r\n  const compareDates = (a, b) => {\r\n    // Divide las cadenas en sus componentes\r\n    const componentsA = a.split('-').map(Number);\r\n    const componentsB = b.split('-').map(Number);\r\n    // Crea objetos de fecha personalizados\r\n    const dateA = new Date(componentsA[0], componentsA[1] - 1, componentsA[2], componentsA[3], componentsA[4], componentsA[5]);\r\n    const dateB = new Date(componentsB[0], componentsB[1] - 1, componentsB[2], componentsB[3], componentsB[4], componentsB[5]);\r\n    return dateA - dateB;\r\n  };\r\n  useEffect(() => {\r\n    if (collections && collections.length > 0 && selectedSession) {\r\n      setActiveCollection(collections[0])\r\n      collections.sort(customSortCollections);\r\n      collections.forEach(collection => {\r\n        collection.questions.sort(customSortQuestions);\r\n      });\r\n      setSelectedSession((prevSelectedSession) => ({\r\n        ...prevSelectedSession,\r\n        collection_id: collections[0].id,\r\n        question_id: collections[0].questions[0].id\r\n      }));\r\n      setActiveQuestion({\r\n        id: collections[0].questions[0].id,\r\n        prompt: collections[0].questions[0].prompt,\r\n        answers: collections[0].questions[0].answers,\r\n        image: `/api/question/${collections[0].id}/${collections[0].questions[0].id}/image`,\r\n      });\r\n      \r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [collections]);\r\n\r\n  const getParticipantsBySession = useCallback(() => {\r\n    fetch(\r\n      `/api/session/${selectedSession.id}/allParticipants`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(\r\n          {\r\n            user: username,\r\n            pass: password\r\n          }\r\n        )\r\n      }\r\n    ).then(res => {\r\n      if (res.status === 200) {\r\n        res.json().then(data => {\r\n          setParticipantList(data);\r\n        });\r\n      } else {\r\n        res.text().then(msg => console.log(msg));\r\n      }\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n  }, [selectedSession.id, username, password]);\r\n\r\n  useEffect(() => {\r\n    if (selectedSession.id !== 0) {\r\n      getParticipantsBySession();\r\n      setCurrentSession(new Session(selectedSession.id, 0, (controlMessage) => {\r\n        if (controlMessage.participant !== 0) {\r\n          if (selectedSession.id === Number(controlMessage.session)) {\r\n            switch (controlMessage.type) {\r\n              case 'join':\r\n                if (sessionStatus === SessionStatus.Active) {\r\n                  setTimeout(function () { //Mirar collection_id:activeCollection.id en el mensaje\r\n                    currentSession.publishControl({ type: 'setup', collection_id: activeCollection.id, question_id: selectedSession.question_id });\r\n                  }, 1000);\r\n\r\n                }\r\n                getParticipantsBySession();\r\n                break;\r\n              case 'ready':\r\n                if (sessionStatus === SessionStatus.Active) {\r\n                  setTimeout(function () {\r\n                    let targetDate = new Date(targetDateCountdown);\r\n                    currentSession.publishControl({ type: 'started', duration: (targetDate-new Date())/1000 , positions: peerMagnetPositions });\r\n                  }, 1000);\r\n                }\r\n                getParticipantsBySession();\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n          }\r\n        }\r\n      },\r\n        (participantId, updateMessage) => {\r\n          if (participantId !== 0) {\r\n            setPeerMagnetPositions((peerPositions) => {\r\n              return {\r\n                ...peerPositions,\r\n                [participantId]: updateMessage.data.position\r\n              }\r\n            });\r\n          }\r\n        }\r\n      )\r\n      );\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [selectedSession.id, getParticipantsBySession]);\r\n\r\n  useEffect(() => {\r\n    // Update central Cue based on magnet positions\r\n    if (peerMagnetPositions && Object.keys(peerMagnetPositions).length > 1) {\r\n      const usablePeerPositions = Object.keys(peerMagnetPositions).map(\r\n        k => peerMagnetPositions[k]\r\n      ).filter(peerPosition => peerPosition.length === activeQuestion.answers.length);\r\n      setCentralCuePosition(\r\n        usablePeerPositions.reduce(\r\n          (cuePosition, peerPosition) => cuePosition.map(\r\n            (value, i) => value + peerPosition[i]\r\n          )\r\n        ).map(value => value / (usablePeerPositions.length))\r\n      );\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [peerMagnetPositions]);\r\n\r\n  useEffect(() => {\r\n    if (shouldPublishCentralPosition && currentSession) {\r\n      currentSession.publishUpdate({ data: { position: centralCuePosition, timeStamp: new Date().toISOString() } });\r\n      setShouldPublishCentralPosition(false);\r\n      setTimeout(() => {\r\n        currentSession.publishControl({ type: 'stop' });\r\n      }, 100);\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [shouldPublishCentralPosition, currentSession]);\r\n\r\n  const handleSessionChange = (event) => {\r\n    const sessionId = parseInt(event.target.value);\r\n    const session = sessions.find(s => s.id === sessionId);\r\n    session.question_id = selectedSession.question_id;\r\n    session.duration = selectedSession.duration;\r\n    setSelectedSession(session);\r\n  }\r\n  const handleQuestionChange = (event) => {\r\n    setPeerMagnetPositions({});\r\n    setSelectedSession({ ...selectedSession, question_id: event.target.value });\r\n    let question = activeCollection.questions.find(item => item.id === parseInt(event.target.value));\r\n    setActiveQuestion({\r\n      id: event.target.value,\r\n      prompt: question.prompt,\r\n      answers: question.answers,\r\n      image: `/api/question/${activeCollection.id}/${event.target.value}/image`,\r\n    });\r\n    currentSession.publishControl({ type: 'setup', collection_id: activeCollection.id, question_id: event.target.value });\r\n  }\r\n  const handleCollectionChange = (event) => {\r\n    setPeerMagnetPositions({});\r\n    setSelectedSession({ ...selectedSession, collection_id: event.target.value });\r\n    let collection = collections.find(item => item.id === event.target.value);\r\n    let question = null;\r\n\r\n    for (let i = 1; ; i++) {\r\n      const foundQuestion = collection.questions.find(item => {\r\n        const extractedNumber = parseInt(item.prompt.split(\"_\")[1].substring(0, item.prompt.split(\"_\")[1].indexOf(\":\")));\r\n        return extractedNumber === i;\r\n      });\r\n\r\n      if (foundQuestion) {\r\n        question = foundQuestion;\r\n        break; // Salir del bucle si encontramos la pregunta.\r\n      }\r\n    }\r\n    setActiveCollection(collection)\r\n    setActiveQuestion({\r\n      id: question.id,\r\n      prompt: question.prompt,\r\n      answers: question.answers,\r\n      image: `/api/question/${collection.id}/${question.id}/image`,\r\n    });\r\n    currentSession.publishControl({ type: 'setup', collection_id: collection.id, question_id: question.id });\r\n  }\r\n\r\n  const startSession = (event) => {\r\n    if (!waitingCountDown) {\r\n      setPeerMagnetPositions({});\r\n      setCentralCuePosition([0, 0, 0, 0, 0, 0]);\r\n      currentSession.publishControl({ type: 'start', duration: selectedSession.duration});\r\n      setSessionStatus(SessionStatus.Active);\r\n      setTargetDateCountdown((Date.now() + selectedSession.duration * 1000 + 200))\r\n    }\r\n    waitOrCloseSession();\r\n  }\r\n\r\n  const waitOrCloseSession = () => {\r\n    if (!waitingCountDown) {\r\n      setWaitingCountDown(true);\r\n      timerId = setTimeout(() => {\r\n        setShouldPublishCentralPosition(true); // Marcar que se debe publicar la posición central\r\n        setWaitingCountDown(false);\r\n        setTargetDateCountdown(Date.now());\r\n        setSessionStatus(SessionStatus.Waiting);\r\n      }, selectedSession.duration * 1000);\r\n    } else {\r\n      clearTimeout(timerId);\r\n      setShouldPublishCentralPosition(true); // Marcar que se debe publicar la posición central\r\n      setWaitingCountDown(false);\r\n      setTargetDateCountdown(Date.now());\r\n      setSessionStatus(SessionStatus.Waiting);\r\n    }\r\n  };\r\n  const createSession = (event) => {\r\n    fetch(\r\n      `/api/createSession`,\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(\r\n          {\r\n            user: username,\r\n            pass: password\r\n          }\r\n        )\r\n      }\r\n    ).then(res => {\r\n      if (res.status === 200) {\r\n        res.json().then(data => {\r\n          onSessionCreated(data);\r\n        });\r\n      } else {\r\n        res.text().then(msg => console.log(msg));\r\n      }\r\n    }).catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n  const downloadLastFolder = async () => {\r\n    let folderPath = logs[logs.length - 1];\r\n    setSelectedLog(folderPath);\r\n    await new Promise((resolve) => setTimeout(resolve, 0)); // Esperar un ciclo de eventos para que setSelectedLog termine de actualizar\r\n    fetch(`/api/downloadLog/${logs[logs.length - 1]}`)\r\n      .then(response => response.blob())\r\n      .then(blob => {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        let folder_name = folderPath + \".zip\";\r\n        link.setAttribute('download', folder_name);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const downloadFolder = () => {\r\n    let folderPath = selectedLog\r\n    fetch(`/api/downloadLog/${folderPath}`)\r\n      .then(response => response.blob())\r\n      .then(blob => {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        let folder_name = folderPath + \".zip\";\r\n        link.setAttribute('download', folder_name);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const downloadAllLogs = () => {\r\n    fetch(`/api/downloadAllLogs`)\r\n      .then(response => response.blob())\r\n      .then(blob => {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        let folder_name = \"AllLogs.zip\";\r\n        link.setAttribute('download', folder_name);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const fetchlogs = async () => {\r\n    try {\r\n      const response = await fetch('/api/listLogs');\r\n      const data = await response.json();\r\n      setLogs(data.logs.filter(item => item !== \"zips\").sort(compareDates));\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const handleLogSelect = (event) => {\r\n    const selectedLog = event.target.value;\r\n    setSelectedLog(selectedLog);\r\n  };\r\n  return (\r\n    <div className=\"admin-interface\">\r\n      <div className=\"left-column\">\r\n        <div className=\"sessionlist\">\r\n          <select onChange={handleSessionChange} disabled={waitingCountDown}>\r\n            {sessions && sessions.map(session => (\r\n              <option key={session.id} value={session.id}>Session {session.id}</option>\r\n            ))}\r\n          </select>\r\n          <button onClick={createSession}>New Session</button>\r\n        </div>\r\n\r\n        <div className=\"sessiondetails\">\r\n          <label>Id:</label>\r\n          <input type=\"text\" readOnly value={selectedSession && selectedSession.id} />\r\n          <label>Duration:</label>\r\n          <input type=\"text\" value={selectedSession ? selectedSession.duration : \"\"} onChange={e => setSelectedSession({ ...selectedSession, duration: e.target.value })} />\r\n          <label>Collection:</label>\r\n          <select onChange={handleCollectionChange} disabled={waitingCountDown}>\r\n            {collections && collections.map(collection => (\r\n              <option key={collection.id} value={collection.id}>{collection.id}</option>\r\n            ))}\r\n          </select>\r\n          <label>Question:</label>\r\n          <select onChange={handleQuestionChange} disabled={waitingCountDown}>\r\n            {activeCollection.questions && activeCollection.questions.map(question => (\r\n              <option key={question.id} value={question.id}>{question.prompt}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"startsession\">\r\n          <button onClick={startSession}>{waitingCountDown ? \"Stop\" : \"Start\"}</button>\r\n          <label>Ready: {participantList ? participantList.filter(participant => participant.status === 'ready').length : 0}/{participantList ? participantList.length : 0}</label>\r\n          <textarea className=\"inputParticipant\" readOnly value={participantList ? participantList.map(p => `${p.username} -> ${p.status}`).join(\"\\n\") : \"Sin participantes todavía\"} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"center-column\">\r\n        <div>\r\n          <QuestionDetails\r\n            image={activeQuestion.id ? activeQuestion.image : \"\"}\r\n            prompt={activeQuestion.id ? activeQuestion.prompt : \"Question not defined yet\"}\r\n          />\r\n          <CountDown targetDate={targetDateCountdown} />\r\n        </div>\r\n        <div className=\"loglist\">\r\n          <label id=\"label-log\">Lista de logs:({logs ? logs.length : 0})</label>\r\n          <select value={selectedLog} onChange={handleLogSelect}>\r\n            <option value=\"\">Seleccionar log</option>\r\n            {logs.map(log => {\r\n              if (log !== \"zips\") {\r\n                return <option key={log} value={log}>{log}</option>;\r\n              }\r\n              return null;\r\n            })}\r\n          </select>\r\n          <button onClick={fetchlogs}>Obtener logs</button>\r\n          <button onClick={downloadFolder}>Descargar log</button>\r\n          <button onClick={downloadLastFolder}>Descargar último log</button>\r\n          <button onClick={downloadAllLogs}>Descargar todos los logs</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"right-column\">\r\n        <BoardView\r\n          answers={activeQuestion.answers ? activeQuestion.answers : []}\r\n          centralCuePosition={centralCuePosition}\r\n          peerMagnetPositions={peerMagnetPositions && Object.keys(peerMagnetPositions).map(\r\n            k => peerMagnetPositions[k]\r\n          )}\r\n          userMagnetPosition={userMagnetPosition}\r\n          onUserMagnetMove={null}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}